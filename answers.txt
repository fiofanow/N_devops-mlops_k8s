# ● Что такое k8s?
Открытое программное обеспечение для оркестровки контейнеризированных приложений - автоматизации их развёртывания, масштабирования и координации в условиях кластера.

# ● В чём преимущество контейнеризации над виртуализацией?
Это разные технологии направленные на решение, каждая своей задачи.
1. простота и гибкость развертывания приложений по сравнению с ВМ;
2. непрерывность создания, интеграции и развертывания контейнера с возможностью быстро откатить изменения;
3. создание контейнеров приложений в процессе сборки/релиза и отделение приложения от аппаратной инфраструктуры;
4. идентичность среды разработки и тестирования на сервере и терминалах разработчика (ноутбуках, ПК);
5. возможность переносить приложения между облаками и ОС — Ubuntu, RHEL, CoreOS, on-prem, Google Kubernetes Engine и т.д.;
6. разделение приложений на изолированные, распределенные, гибкие микросервисы с динамическим развертыванием и управлением.

# ● В чём состоит принцип самоконтроля k8s? 
Самоконтроль. Если контейнер отказывает или сбоит, Kubernetes автоматически перезапускает или останавливает его. 
Освободившиеся ресурсы она распределяет на другие приложения. 
Система контролирует их работу в соответствии с критериями, заданными разработчиком. 
Если контейнер не соответствует им, платформа отключает его или заменяет на другой, а также скрывает от клиента, пока он не будет готов к обслуживанию.

# ● Как вы думаете, зачем Вам понимать принципы деплоя в k8s?
Для того чтобы использовать приемущество контейнеризации и удоно управлять набором контейнеров.

# ● Какое из средств управления секретами наиболее распространено в использовании совместно с k8s? 
В Kubernetes есть такая сущность, как secrets.

# ● Какие типы нод есть в k8s, каковы их базовые функции?
Nodes (ноды, узлы)
Это физические или виртуальные машины, на которых развертываются и запускаются контейнеры с приложениями. Совокупность нод образует кластер Kubernetes.
Pods (Поды)
Это абстрактный объект Kubernetes, представляющий собой «обертку» для одного или группы контейнеров. Контейнеры в поде запускаются и работают вместе, имеют общие сетевые ресурсы и хранилище. 
Kubernetes не управляет контейнерами напрямую, он собирает их в поды и работает с ими.